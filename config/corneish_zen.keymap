/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NAV     1
#define MOUSE   2
#define MEDIA   3
#define NUM     4
#define SYM     5
#define FUN     6
#define ADJUST  7

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bsp {
            bindings = <&kp BACKSPACE>;
            key-positions = <22 21>;
        };

        rbsp {
            bindings = <&kp BACKSPACE>;
            key-positions = <5 4>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <2 1>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <25 26>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp Q       &kp W       &kp E        &kp R        &kp T        &kp Y      &kp U        &kp I        &kp O       &kp P               &kp BACKSPACE
&kp TAB         &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &lt 4 G      &lt 4 H    &hm RSHFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMICOLON  &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp Z       &kp X       &kp C        &kp V        &kp B        &kp N      &kp M        &kp COMMA    &kp DOT     &lt 2 SLASH         &kp RIGHT_BRACKET
                                        &lt 1 ESC    &lt 2 SPACE  &lt 3 TAB    &lt 3 RET  &lt 1 BSPC   &to 5
            >;
        };

        num_layer {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp DOUBLE_QUOTES  &kp SQT   &kp BACKSPACE  &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &kp COLON       &kp RSHFT        &kp RCTRL          &kp RALT  &kp RGUI       &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &kp CAPS        &kp LANGUAGE_1   &trans             &trans    &trans         &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans          &trans           &trans
            >;
        };

        nav_layer {
            bindings = <
&trans          &kp LG(Q)           &kp LG(LS(N))     &kp LG(U)     &kp LG(F)      &kp LG(T)        &kp INSERT  &kp PAGE_DOWN   &kp PG_UP     &kp HOME   &kp DEL        &trans
&trans          &kp LGUI            &kp LALT          &kp LCTRL     &kp LSHFT      &kp LG(A)        &kp LEFT    &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp BACKSPACE  &trans
&kp LEFT_SHIFT  &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)  &kp LG(DOWN)  &kp LG(RIGHT)  &kp LG(ENTER)    &kp LC(Z)   &kp LC(X)       &kp LC(C)     &kp LC(V)  &kp LC(Y)      &kp RIGHT_SHIFT
                                                      &kp LC(T)     &kp LC(W)      &kp LC(W)        &mkp LCLK   &mkp RCLK       &mkp MCLK
            >;
        };

        media_layer {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &kp LS(R)       &kp LS(M)     &kp LS(H)        &kp LS(S)     &kp LS(V)   &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &kp K_PREV      &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT    &kp LS(E)   &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &kp LS(INSERT)  &kp NUMBER_0  &kp NUMBER_1     &kp NUMBER_3  &kp C_MUTE  &kp N5
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &kp C_PAUSE     &kp C_PP      &kp C_MUTE
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8     &kp F9     &kp PSCRN          &bt BT_SEL 0                      &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans
&trans  &kp F11  &kp F4  &kp F5     &kp F6     &kp SLCK           &out OUT_TOG                      &kp RSHFT        &kp RCTRL        &kp RALT         &kp RGUI         &trans
&trans  &kp F10  &kp F1  &kp F2     &kp F3     &kp PAUSE_BREAK    &rgb_ug RGB_COLOR_HSB(20,100,50)  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans
                         &kp K_APP  &kp SPACE  &kp TAB            &trans                            &trans           &trans
            >;
        };

        GA {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R      &kp T      &kp Y      &kp U          &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F      &kp G      &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp LBKT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B      &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                         &kp LALT  &kp SPACE  &kp TAB    &kp ENTER  &kp BACKSPACE  &to 0
            >;
        };
    };
};
